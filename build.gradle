// ================
// Gradle configuration

plugins {
	id 'java-library'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'org.jetbrains.kotlin.jvm' version '1.3.61'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.61'
	id 'org.springframework.boot' version '2.3.1.RELEASE'

	// https://github.com/palantir/gradle-git-version
	id 'com.palantir.git-version' version '0.12.2'

	// code quality plugins
	id 'jacoco'
	id 'org.jmailen.kotlinter' version '2.3.0'
	id 'io.gitlab.arturbosch.detekt' version '1.5.1'
	id 'org.jetbrains.dokka' version '0.10.1'

}

wrapper {
	gradleVersion = '6.0.1'
	distributionType = Wrapper.DistributionType.ALL
}

// ================
// Project metadata configuration

group = 'org.polycreo'
version = gitVersion()

// ================
// Build configuration

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
		allWarningsAsErrors = true
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
		allWarningsAsErrors = true
	}
}

apply plugin: 'io.spring.dependency-management'

repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://dl.bintray.com/polycreo/maven' }
	// maven { url 'https://jitpack.io' }
}

dependencies {
	api 'org.polycreo:polycreo-loggings:1.0.0-rc3'
	api 'org.polycreo:polycreo-services:1.0.0-rc2'
	api 'org.polycreo:polycreo-chunks:1.0.0-rc17'
	api 'org.polycreo:polycreo-resources:1.0.0-rc6'
	api 'org.polycreo:polycreo-httpexceptions:1.0.0-rc5'

	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	// implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'
	implementation 'org.springframework:spring-tx'
	implementation 'org.springframework:spring-web'
	implementation 'org.springframework:spring-webmvc'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'

	// others
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'io.github.microutils:kotlin-logging:1.7.8'
	implementation 'com.github.java-json-tools:json-patch:1.10'
	compileOnly 'javax.servlet:javax.servlet-api'

	// test
	testImplementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.4.2'
	testImplementation 'io.mockk:mockk:1.9.3' // https://mockk.io/
	testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.21' // https://www.kotlinresources.com/library/assertk/

	// build
	detektPlugins 'io.gitlab.arturbosch.detekt:detekt-formatting:1.5.1'
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

// ================
// Lint / Test configuration

detekt {
	failFast = true
	reports {
		html.enabled = true
		xml.enabled = true
	}
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

tasks.withType(Test) {
	exclude "**/*\$*", "**/*Tests.class", "**/examples/**"
	reports {
		html.enabled = true
		junitXml.outputPerTestCase = false
	}
	testLogging.exceptionFormat = 'full'
	beforeTest {
		logger.lifecycle("{} > {}", it.parent.name, it.name)
	}
}

// ================
// Deploy configuration

apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
apply from: "${rootProject.projectDir}/gradle/publish.gradle"
